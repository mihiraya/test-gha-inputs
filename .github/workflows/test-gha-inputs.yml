name: Mixed inputs
defaults:
   run: 
      shell: bash
      
on:
  workflow_dispatch:
    inputs:
      # Input: Choice
      environment_deploy:
        type: choice
        description: Choose Environment
        options:
        - Production
        - Staging
        - Development
        
      # Input: Checkbox  
      fmstatus: 
        type: boolean
        description: fmStatus.json
      appupgrade: 
        type: boolean
        description: appupgrade.json
      flagshipappupgrade:
        type: boolean
        description: flagshipappupgrade.json
      stubflagshipappupgrade:
        type: boolean
        description: stubflagshipappupgrade.json
   
      # Array
      flywheel_adhoc:
        type: boolean
        description: Flywheel Adhoc Files
   
      flywheel_adhoc_files:
        description: "Enter Flywheel Adhoc file/s to upload [file1, file2, ...]"
     
      # Input: Textbox
      confirm_upload:
        description: "Please Confirm Upload by typing [confirm upload]"
        required: true
        
        
      # Routing
      use_inputs_for_values:
        type: boolean
   
# Set Global Variable
env:
  # Declare HardCoded Files to Upload
  base_file_test: 
    ( 
       fmStatus.json
       appupgrade.json
       flagshipappupgrade.json
       stubflagshipappupgrade.json
       adhocPromotion.json
    )
    
jobs: 
  # ------------------------------------------------------------------------------------------
  # Initial Job
  # ------------------------------------------------------------------------------------------
  scripts:
    name: Run some Scripts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkput Repository Code
      uses: actions/checkout@v3
      
    - name: Run Hello World Script
      run: | 
         ls -lart
        #/.github/scripts/1-hello-world.sh
      shell: bash
    
  # ------------------------------------------------------------------------------------------
  # First Job
  # ------------------------------------------------------------------------------------------
  get-tick: 
    name: "Upload Files Info"
    runs-on: ubuntu-latest
    outputs: 
      GH_FILES_TO_UPLOAD: ${{ steps.get_ticked_files_to_upload.outputs.GH_FILES_TO_UPLOAD }}
  
    steps:
    - name: "[ Inputs ] Get files to upload"
      id: get_ticked_files_to_upload
      run: |
      
          # Declare Array Variable
          FILES_TO_UPLOAD=()
          
          if [ ${{ github.event.inputs.fmstatus }} ] ;
          then
             FILES_TO_UPLOAD+=("fmStatus.json")
          fi
          
          if [ ${{ github.event.inputs.appupgrade }} ] ;
          then
             FILES_TO_UPLOAD+=("appupgrade.json")
          fi
          
          if [ ${{ github.event.inputs.flagshipappupgrade }} ] ;
          then
             FILES_TO_UPLOAD+=("flagshipappupgrade.json")
          fi
          
          if [ ${{ github.event.inputs.stubflagshipappupgrade }} ] ;
          then
             FILES_TO_UPLOAD+=("stubflagshipappupgrade.json")
          fi
          
          # Flywheel 
          if [ ${{ github.event.inputs.flywheel_adhoc }} ] ;
          then
             # https://www.golinuxcloud.com/bash-split-string-into-array-linux/
             # Change comma (,) to whitespace and add under braces
             myarray=(`echo ${{ github.event.inputs.flywheel_adhoc_files }} | tr ',' ' '`)
             FILES_TO_UPLOAD+=(${myarray[@]})
          fi
          
          # Iterate the loop to read and print each array element
          echo "==================================================================="
          echo "Files to upload"
          echo "==================================================================="
          for value in "${FILES_TO_UPLOAD[@]}"
          do
            echo  $value
          done
                
          #----------------------------------------------------------------
          # Store to GHA Output
          #----------------------------------------------------------------
          echo "::set-output name=GH_FILES_TO_UPLOAD::${FILES_TO_UPLOAD[@]}" 
          #echo ${FILES_TO_UPLOAD} >> $GITHUB_OUTPUT
          
    - name: "[ Info ] Display all data"
      run: |
         echo "we are using shell -> $SHELL"
         # Declare "Step Level" Array Variable
         FILES_TO_UPLOAD=()
         
         # Return whether we use INPUT or HARDCODED values in file uploads
         if ${{ github.event.inputs.use_inputs_for_values }} ;
         then 
            echo "We are using Input values"
            FILES_TO_UPLOAD=( ${{ steps.get_ticked_files_to_upload.outputs.GH_FILES_TO_UPLOAD }} )
         else 
            echo "We are using hardcoded values"
            FILES_TO_UPLOAD=${{ env.base_file_test }}
         fi
      
         # --------------------------------
         # Create Function
         # --------------------------------
         checkFiles () {
             file=$1
             dest=$2
             echo "$file" 
             echo "  └─► Will be uploaded to $dest"
         }
      
         # Iterate the loop to read and print each array element
          echo "==================================================================="
          echo "Files to upload"
          echo "==================================================================="
          #for value in ${{ steps.get_ticked_files_to_upload.outputs.GH_FILES_TO_UPLOAD }}
          for value in "${FILES_TO_UPLOAD[@]}"
          do
            case $value in 
               fmStatus.json)
                  target_folder="smps-in-fm/etc/"
                  #echo "$value :: will be uploaded to ${target_folder}"
                  checkFiles $value $target_folder
                  ;;
               
               appupgrade.json | flagshipappupgrade.json | stubflagshipappupgrade.json)
                  target_folder="app/upgrade"
                  #echo "$value :: will be uploaded to ${target_folder}"
                  checkFiles $value $target_folder
                  ;;
                  
               adhocPromotion*)
                  target_folder="app/flywheel/adhoc/"
                  #echo "$value :: will be uploaded to ${target_folder}"
                  checkFiles $value $target_folder
                  ;;
               
               *)
                  echo "$value :: is unknown"
                  ;;
               esac
          done

    - name: "[ Notify ] Upload Notification"
      run: |
        if [ "${{ github.event.inputs.confirm_upload }}" == "confirm upload" ] ;
        then
             echo "Let's Upload"
        else 
             echo "cancelled Upload"
        fi
         
    
          
  # ------------------------------------------------------------------------------------------
  # Second Job
  # ------------------------------------------------------------------------------------------ 
  s3_upload:
    name: S3 Upload
    # Run on Group of GHA Runners 
    runs-on: ubuntu-latest
    needs: get-tick
    
    steps: 
    - name: echo
      run: |
         # One Liner Print Code
         echo "${{ needs.get-tick.outputs.GH_FILES_TO_UPLOAD }}"
         
         # Iterate the loop to read and print each array element
          echo "==================================================================="
          echo "Files to upload"
          echo "==================================================================="
          for value in ${{ needs.get-tick.outputs.GH_FILES_TO_UPLOAD }}
          do
            echo  $value
          done
          
  # ------------------------------------------------------------------------------------------
  # Third Job
  # ------------------------------------------------------------------------------------------
  routing:
    name: route
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.use_inputs_for_values }} == true
    needs: get-tick
    
    steps:
    - name: echo
      run: |
          echo "hello route"
